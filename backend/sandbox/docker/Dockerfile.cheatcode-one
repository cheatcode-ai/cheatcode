FROM node:20-alpine AS build

# ---------- Build arguments & environment ----------
ARG PNPM_VERSION=9.2.0
ENV PNPM_HOME="/pnpm"
ENV PATH="$PNPM_HOME:$PATH"

# ---------- Build dependencies ----------
RUN apk add --no-cache git curl

# ---------- Corepack / pnpm ----------
RUN corepack enable \
    && corepack prepare "pnpm@$PNPM_VERSION" --activate

# ---------- Workdir ----------
WORKDIR /workspace/cheatcode-app

# ---------- Fetch cheatcode-app template & install deps ----------
ARG TEMPLATE_REPO="https://github.com/iamjr15/cheatcode-app.git"
ARG TEMPLATE_REF="master"

# Clone only the template (shallow) and install dependencies
RUN git clone --depth 1 --branch "$TEMPLATE_REF" "$TEMPLATE_REPO" . \
    && rm -rf .git \
    && pnpm install \
    && pnpm store prune \
    && rm -rf /root/.npm /root/.cache

# ---------- Supabase CLI (static binary) ----------
RUN curl -fsSL https://github.com/supabase/cli/releases/latest/download/supabase_linux_amd64.tar.gz \
    | tar -xz -C /usr/local/bin/ supabase

# ================================================================== #
#                     Runtime (slim)  Stage                          #
# ================================================================== #
FROM node:20-alpine AS runtime

# ---------- Minimal runtime utilities ----------
RUN apk add --no-cache git bash \
    && echo 'install_if !documentation' >> /etc/apk/world

# ---------- Environment variables for pnpm ----------
ENV PNPM_HOME="/pnpm"
ENV PATH="$PNPM_HOME:$PATH"

# ---------- Enable corepack in runtime stage ----------
RUN corepack enable

# ---------- Workdir & PATH ----------
WORKDIR /workspace/cheatcode-app
ENV PATH="/workspace/cheatcode-app/node_modules/.bin:$PNPM_HOME:$PATH"

# ---------- Copy ready-to-run app ----------
COPY --from=build /workspace/cheatcode-app /workspace/cheatcode-app
COPY --from=build /usr/local/bin/supabase /usr/local/bin/supabase

# ---------- Copy corepack and pnpm setup from build stage ----------
# Copy the corepack binary and its configuration
COPY --from=build /usr/local/bin/corepack /usr/local/bin/corepack

# Copy pnpm setup from build stage (optional files)
RUN mkdir -p /usr/local/lib/node_modules

# ---------- Prepare pnpm in runtime (fallback) ----------
ARG PNPM_VERSION=9.2.0
RUN corepack prepare "pnpm@$PNPM_VERSION" --activate || echo "pnpm already prepared"

# ---------- Exposed dev ports ----------
EXPOSE 3000 8000

# ---------- Default command ----------
ENTRYPOINT ["sleep", "infinity"] 